import { useRef, useState } from 'react'
import { TiLocationArrow } from 'react-icons/ti'

// ProductCard –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const ProductCard = ({
  src,
  title,
  description,
  pricePerKg = 120,
  isVideo = false,
  onOrder
}) => {
  const [quantity, setQuantity] = useState(0.5) // –ø–æ—á–∞—Ç–∫–æ–≤–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å 500–≥

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É –º–µ–¥—ñ–∞
  const detectMediaType = src => {
    if (!src) return false
    const videoExtensions = ['.mp4', '.webm', '.ogg', '.mov', '.avi']
    return videoExtensions.some(ext => src.toLowerCase().includes(ext))
  }

  const shouldShowVideo = isVideo !== undefined ? isVideo : detectMediaType(src)

  // –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–º—ñ–Ω–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
  const increaseQuantity = () => {
    setQuantity(prev => prev + 0.5)
  }

  const decreaseQuantity = () => {
    if (quantity > 0.5) {
      setQuantity(prev => prev - 0.5)
    }
  }

  // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó —Ü—ñ–Ω–∏
  const totalPrice = (quantity * pricePerKg).toFixed(0)

  // –§—É–Ω–∫—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  const handleOrder = () => {
    const orderData = {
      title: typeof title === 'string' ? title : '–°–≤—ñ–∂—ñ –≥–ª–∏–≤–∏',
      quantity,
      pricePerKg,
      totalPrice: parseFloat(totalPrice)
    }

    if (onOrder) {
      onOrder(orderData)
    } else {
      alert(
        `–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n${orderData.title}\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${quantity} –∫–≥\n–î–æ —Å–ø–ª–∞—Ç–∏: ${totalPrice} ‚Ç¥`
      )
    }
  }

  return (
    <div className='relative size-full'>
      {shouldShowVideo ? (
        <video
          src={src}
          loop
          muted
          autoPlay
          className='absolute left-0 top-0 size-full object-cover object-center'
        />
      ) : (
        <img
          src={src}
          alt={typeof title === 'string' ? title : 'Product image'}
          className='absolute left-0 top-0 size-full object-cover object-center'
        />
      )}

      {/* –ó–∞—Ç–µ–º–Ω–µ–Ω–Ω—è –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ */}
      <div className='absolute inset-0 bg-black bg-opacity-40'></div>

      <div className='relative z-10 flex size-full flex-col justify-between p-5 text-blue-50'>
        {/* –í–µ—Ä—Ö–Ω—è —á–∞—Å—Ç–∏–Ω–∞ –∑ –Ω–∞–∑–≤–æ—é —Ç–∞ –æ–ø–∏—Å–æ–º */}
        <div>
          <h1 className='bento-title special-font'>{title}</h1>
          {description &&
            (typeof description === 'string' ? (
              <p className='mt-3 w-full text-xs md:text-base'>{description}</p>
            ) : (
              <div className='mt-3 w-full text-xs md:text-base'>
                {description}
              </div>
            ))}
        </div>

        {/* –ù–∏–∂–Ω—è —á–∞—Å—Ç–∏–Ω–∞ –∑ —Ü—ñ–Ω–æ—é —Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∞–º–∏ */}
        <div className='space-y-4'>
          {/* –¶—ñ–Ω–∞ –∑–∞ –∫–≥ */}
          <div className='text-right'>
            <span className='text-sm opacity-75'>{pricePerKg} ‚Ç¥/–∫–≥</span>
          </div>

          {/* –ö–æ–Ω—Ç—Ä–æ–ª–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ */}
          <div className='flex items-center justify-between bg-black bg-opacity-50 rounded-lg p-3 backdrop-blur-sm'>
            <button
              onClick={decreaseQuantity}
              className='w-8 h-8 rounded-full bg-blue-600 hover:bg-blue-500 flex items-center justify-center text-white font-bold transition-colors disabled:opacity-50 disabled:cursor-not-allowed'
              disabled={quantity <= 0.5}
            >
              ‚àí
            </button>

            <div className='text-center'>
              <div className='text-lg font-bold'>{quantity} –∫–≥</div>
              <div className='text-xs opacity-75'>{quantity * 1000} –≥</div>
            </div>

            <button
              onClick={increaseQuantity}
              className='w-8 h-8 rounded-full bg-blue-600 hover:bg-blue-500 flex items-center justify-center text-white font-bold transition-colors'
            >
              +
            </button>
          </div>

          {/* –ó–∞–≥–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ —Ç–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è */}
          <div className='flex items-center justify-between bg-black bg-opacity-50 rounded-lg p-3 backdrop-blur-sm'>
            <div>
              <div className='text-lg font-bold text-green-400'>
                {totalPrice} ‚Ç¥
              </div>
              <div className='text-xs opacity-75'>–¥–æ —Å–ø–ª–∞—Ç–∏</div>
            </div>

            <button
              onClick={handleOrder}
              className='px-6 py-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-500 hover:to-purple-500 rounded-full text-white font-semibold transition-all transform hover:scale-105 active:scale-95'
            >
              –ó–∞–º–æ–≤–∏—Ç–∏
            </button>
          </div>
        </div>
      </div>
    </div>
  )
}

const BentoTilt = ({ children, className = '' }) => {
  const [transformStyle, setTransformStyle] = useState('')
  const itemRef = useRef()

  const handleMouseMove = e => {
    if (!itemRef.current) return

    const { left, top, width, height } = itemRef.current.getBoundingClientRect()

    const relativeX = (e.clientX - left) / width
    const relativeY = (e.clientX - top) / height

    const tiltX = (relativeY - 0.5) * 5
    const tiltY = (relativeX - 0.5) * -5

    const newTransform = `perspective(700px) rotateX(${tiltX}deg) rotateY(${tiltY}deg) scale3d(0.98, 0.98, 0.98)`
    setTransformStyle(newTransform)
  }

  const handleMouseLeave = e => {
    setTransformStyle('')
  }

  return (
    <div
      className={className}
      ref={itemRef}
      onMouseMove={handleMouseMove}
      onMouseLeave={handleMouseLeave}
      style={{ transform: transformStyle }}
    >
      {children}
    </div>
  )
}

const BentoCard = ({ src, title, description, isVideo = true }) => {
  const detectMediaType = src => {
    if (!src) return false
    const videoExtensions = ['.mp4', '.webm', '.ogg', '.mov', '.avi']
    return videoExtensions.some(ext => src.toLowerCase().includes(ext))
  }

  const shouldShowVideo = isVideo !== undefined ? isVideo : detectMediaType(src)

  return (
    <div className='relative size-full'>
      {shouldShowVideo ? (
        <video
          src={src}
          loop
          muted
          autoPlay
          className='absolute left-0 top-0 size-full object-cover object-center'
        />
      ) : (
        <img
          src={src}
          alt={title || 'Bento card image'}
          className='absolute left-0 top-0 size-full object-cover object-center'
        />
      )}

      <div className='relative z-10 flex size-full flex-col justify-between p-5 text-blue-50'>
        <div>
          <h1 className='bento-title special-font'>{title}</h1>
          {description && (
            <p className='mt-3 w-full text-xs md:text-base'>{description}</p>
          )}
        </div>
      </div>
    </div>
  )
}

const Features = () => {
  const handleOrder = orderData => {
    console.log('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:', orderData)
    // –¢—É—Ç –¥–æ–¥–∞–º –ª–æ–≥—ñ–∫—É –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    alert(
      `–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!\n\n–¢–æ–≤–∞—Ä: ${orderData.title}\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${orderData.quantity} –∫–≥\n–°—É–º–∞: ${orderData.totalPrice} ‚Ç¥\n\n–ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º!`
    )
  }

  return (
    <section className='bg-black pb-52'>
      <div className='container mx-auto px-3 md:px-10'>
        <div className='px-5 py-32'>
          <p className='font-circular-web text-lg text-blue-50'>
            —Å–º–∞—á–Ω–æ —ñ –∫–æ—Ä–∏—Å–Ω–æ
          </p>
          <p className='max-w-md font-circular-web text-lg text-blue-50 opacity-50'>
            –°–º–∞—á–Ω–∏–π –∞–∫—Ü–µ–Ω—Ç –¥–ª—è –≤–∞—à–∏—Ö —Å—Ç—Ä–∞–≤
          </p>
        </div>

        <BentoTilt className='border-hsla relative mb-7 h-96 w-full overflow-hidden rounded-md md:h-[65vh]'>
          <BentoCard
            src='img/fff.webp'
            isVideo={false}
            title={
              <>
                –§–µ—Ä–º–µ—Ä—Å—å–∫—ñ <b>–≥–ª–∏–≤–∏</b>
              </>
            }
            description='–ù—ñ–∂–Ω—ñ —Ñ–µ—Ä–º–µ—Ä—Å—å–∫—ñ –≥–ª–∏–≤–∏ –¥–ª—è —Å–º–∞—á–Ω–∏—Ö —ñ –∫–æ—Ä–∏—Å–Ω–∏—Ö —Å—Ç—Ä–∞–≤. 
      –í—ñ–¥–∫—Ä–∏–π –Ω–æ–≤—ñ —Ä–µ—Ü–µ–ø—Ç–∏ —Å—É–ø—ñ–≤, –∑–∞–∫—É—Å–æ–∫ —ñ –≥–∞—Ä–Ω—ñ—Ä—ñ–≤ –ø—Ä—è–º–æ –Ω–∞ —Å–≤–æ—ó–π –∫—É—Ö–Ω—ñ!'
          />
        </BentoTilt>

        <div className='grid h-[135vh] grid-cols-2 grid-rows-3 gap-7'>
          <BentoTilt className='bento-tilt_1 row-span-1 md:col-span-1 md:row-span-2'>
            <BentoCard
              title={<>–ì–ª–∏–≤–∏ ‚Äî –±—ñ–ª—å—à–µ –Ω—ñ–∂ –ø—Ä–æ—Å—Ç–æ –≥—Ä–∏–±</>}
              description={
                <div className='grid md:grid-cols-1 gap-4 text-m'>
                  {/* –ë—ñ–ª–æ–∫ */}
                  <div className='flex flex-col items-center bg-gray-900 rounded-xl p-3'>
                    <div className='text-3xl mb-1'>ü•©</div>
                    <h3 className='font-semibold'>–ë–∞–≥–∞—Ç–æ –±—ñ–ª–∫—É</h3>
                    <p className='text-gray-400 text-xs text-center'>
                      –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –º‚Äô—è—Å—É –¥–ª—è –≤–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Ü—ñ–≤.
                    </p>
                  </div>

                  {/* –í—ñ—Ç–∞–º—ñ–Ω–∏ */}
                  <div className='flex flex-col items-center bg-gray-900 rounded-xl p-3'>
                    <div className='text-3xl mb-1'>üíä</div>
                    <h3 className='font-semibold'>–í—ñ—Ç–∞–º—ñ–Ω–∏ B</h3>
                    <p className='text-gray-400 text-xs text-center'>
                      –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –Ω–µ—Ä–≤–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ –µ–Ω–µ—Ä–≥—ñ—è.
                    </p>
                  </div>

                  {/* –Ü–º—É–Ω—ñ—Ç–µ—Ç */}
                  <div className='flex flex-col items-center bg-gray-900 rounded-xl p-3'>
                    <div className='text-3xl mb-1'>üõ°Ô∏è</div>
                    <h3 className='font-semibold'>–°–∏–ª—å–Ω–∏–π —ñ–º—É–Ω—ñ—Ç–µ—Ç</h3>
                    <p className='text-gray-400 text-xs text-center'>
                      –ó–∞–ª—ñ–∑–æ —Ç–∞ –º—ñ–∫—Ä–æ–µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –æ—Ä–≥–∞–Ω—ñ–∑–º—É.
                    </p>
                  </div>
                </div>
              }
            />
          </BentoTilt>

          <BentoTilt className='bento-tilt_1 row-span-1 ms-32 md:col-span-1 md:ms-0'>
            <ProductCard
              src='img/mushroom-recipe.jpg'
              isVideo={false}
              pricePerKg={120}
              onOrder={handleOrder}
              title={<>–°–≤—ñ–∂—ñ –≥–ª–∏–≤–∏</>}
              description='–ù–∞–π—Å–≤—ñ–∂—ñ—à—ñ —Ñ–µ—Ä–º–µ—Ä—Å—å–∫—ñ –≥–ª–∏–≤–∏ –ø—Ä—è–º–æ –¥–æ –≤–∞—à–æ–≥–æ —Å—Ç–æ–ª—É'
            />
          </BentoTilt>

          <BentoTilt className='bento-tilt_1 me-14 md:col-span-1 md:me-0'>
            <ProductCard
              src='img/mushroom2.jpg'
              isVideo={false}
              pricePerKg={60}
              onOrder={handleOrder}
              title={<>–°—É—à–µ–Ω—ñ –≥–ª–∏–≤–∏</>}
              description='–†—ñ—à–µ–Ω–Ω—è –¥–ª—è –±—É–¥—å-—è–∫–∏—Ö –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∏—Ö —Å–∏—Ç—É–∞—Ü—ñ–π'
            />
          </BentoTilt>

          <BentoTilt className='bento-tilt_2'>
            <div className='flex size-full flex-col justify-between bg-violet-300 p-5'>
              <h1 className='bento-title special-font w-full text-black'>
                –ù–µ–∑–∞–±–∞—Ä–æ–º –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –Ω–∞—à–æ–≥–æ –∫—É–ª—ñ–Ω–∞—Ä–Ω–æ–≥–æ –±–ª–æ–≥—É
              </h1>
              <TiLocationArrow className='m-5 scale-[5] self-end' />
            </div>
          </BentoTilt>

          <BentoTilt className='bento-tilt_2'>
            <BentoCard src='img/cooking-process.jpg' isVideo={false} />
          </BentoTilt>
        </div>
      </div>
    </section>
  )
}

export default Features
